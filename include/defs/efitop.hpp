#ifndef EFITOP_HPP
#define EFITOP_HPP

#include "defs/undefix.hpp"
#include "types/untypes.hpp"

struct EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL;

typedef EFI_STATUS (EFIAPI *EFI_TEXT_RESET)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN BOOLEAN extVerify);
typedef EFI_STATUS (EFIAPI *EFI_TEXT_STRING)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN CONST CHAR16* str);
typedef EFI_STATUS (EFIAPI *EFI_TEXT_TEST_STRING)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN CONST CHAR16* str);

typedef EFI_STATUS (EFIAPI *EFI_TEXT_QUERY_MODE)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN UINTN modeNumber, OUT UINTN* columns, OUT UINTN* rows);

typedef EFI_STATUS (EFIAPI *EFI_TEXT_SET_MODE)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN UINTN modeNumber);
typedef EFI_STATUS (EFIAPI *EFI_TEXT_SET_ATTRIBUTE)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN UINTN attribute);
typedef EFI_STATUS (EFIAPI *EFI_TEXT_CLEAR_SCREEN)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this);
typedef EFI_STATUS (EFIAPI *EFI_TEXT_SET_CURSOR_POSITION)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN UINTN column, IN UINTN row);
typedef EFI_STATUS (EFIAPI *EFI_TEXT_ENABLE_CURSOR)(IN EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL* _this, IN BOOLEAN visible);

struct EFI_SIMPLE_TEXT_OUTPUT_MODE{
    INT32 maxMode;
    INT32 mode;
    INT32 attribute;
    INT32 cursorColumn;
    INT32 cursorRow;
    BOOLEAN cursorVisible;
};

struct EFI_SIMPLE_TEXT_OUTPUT_PROTOCOL{
    EFI_TEXT_RESET Reset;

    EFI_TEXT_STRING OutputString;
    EFI_TEXT_TEST_STRING TestString;

    EFI_TEXT_QUERY_MODE QueryMode;
    EFI_TEXT_SET_MODE SetMode;
    EFI_TEXT_SET_ATTRIBUTE SetAttribute;

    EFI_TEXT_CLEAR_SCREEN ClearScreen;
    EFI_TEXT_SET_CURSOR_POSITION SetCursorPosition;
    EFI_TEXT_ENABLE_CURSOR EnableCursor;

    EFI_SIMPLE_TEXT_OUTPUT_MODE* Mode;
};

#endif // EFITOP_HPP
